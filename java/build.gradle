/*
 * This file is part of the myhtml4j distribution.
 *   (https://github.com/foobar27/myhtml4j)
 * Copyright (c) 2017 Sebastien Wagener.
 *
 * myhtml4j is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, version 3.
 *
 * myhtml4j is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

group 'com.github.foobar27'
version '0.1.0'

apply plugin: 'java'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile 'com.google.guava:guava:19.0'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom.withXml {
                asNode().with {
                    appendNode('name', 'myhtml4j')
                    appendNode('url',
                               'https://github.com/foobar27/myhtml4j')
                    appendNode('description',
                               'JNI wrapper around the myhtml html5 parser')
                    appendNode('licenses').with {
                        appendNode('license').with {
                            appendNode('name', 'GNU Lesser General Public License (LGPL), Version 3.0')
                            appendNode('url', 'http://www.fsf.org/licensing/licenses/lgpl.txt')
                            appendNode('distribution', 'repo')
                        }
                    }
                }
            }
            tasks.withType(Jar) {
                from(project.projectDir) {
                    include 'LICENSE'
                    into 'META-INF'
                }
            }

            artifact sourceJar
            artifact javadocJar
        }
    }
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}
 
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}