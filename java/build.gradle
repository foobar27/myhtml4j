/*
 * This file is part of the myhtml4j distribution.
 *   (https://github.com/foobar27/myhtml4j)
 * Copyright (c) 2017 Sebastien Wagener.
 *
 * myhtml4j is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, version 3.
 *
 * myhtml4j is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

group 'com.github.foobar27'
version '0.1.7'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    }
}
apply plugin: 'io.codearte.nexus-staging'


repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile 'com.google.guava:guava:19.0'
    compile 'com.github.foobar27:native-initializer:0.1.5'
}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$projectDir/src/main/resources/myhtml4j-version.properties").withWriter { w ->
            Properties p = new Properties()
            p['myhtml4j-version'] = project.version.toString()
            p.store w, null
        }
    }
}

compileJava {
    dependsOn createProperties
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'myhtml4j'
                url 'https://github.com/foobar27/myhtml4j'
                description 'JNI wrapper around the myhtml html5 parser'
                packaging 'jar'
                url 'http://www.example.com/example-application'

                scm {
                    connection 'scm:git:git://github.com/foobar27/myhtml4j.git'
                    developerConnection 'scm:git:ssh://github.com:foobar27/myhtml4j.git'
                    url 'http://github.com/foobar27/myhtml4j/tree/master'
                }

                licenses {
                    license {
                        name 'GNU Lesser General Public License (LGPL), Version 3.0'
                        url 'http://www.fsf.org/licensing/licenses/lgpl.txt'
                    }
                }

                developers {
                    developer {
                        id 'foobar27'
                        name 'Sebastien Wagener'
                        email 'sebastien.wagener@gmail.com'
                    }
                }
                issueManagement {
                    system 'github'
                    url 'https://github.com/foobar27/myhtml4j/issues'
                }
            }
        }
    }
}